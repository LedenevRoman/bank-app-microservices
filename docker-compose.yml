services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DATASOURCE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis-server:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: ["redis-server", "--appendonly", "yes"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  bank-app:
    build:
      context: ./bank-app
      dockerfile: Dockerfile
    container_name: bank-app
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8080:8080"
    depends_on:
      - mysql-db
      - kafka
    networks:
      - app-network

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: notification
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    depends_on:
      - mysql-db
      - kafka
    networks:
      - app-network

  telegrem-bot:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile
    container_name: telegram-bot
    environment:
      BOT_NAME: ${BOT_NAME}
      BOT_TOKEN: ${BOT_TOKEN}
      BANK_APP_URL: http://bank-app:8080
      SPRING_REDIS_HOST: redis-server
      SPRING_REDIS_PORT: 6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-server
      - bank-app
    networks:
      - app-network

volumes:
  mysql_data:
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge